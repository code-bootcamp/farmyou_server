# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DirectStore {
  id: String!
  name: String!
  admin: Admin!
}

type Admin {
  id: String!
  email: String!
  type: String!
  createdAt: DateTime!
  directStore: DirectStore!
  isWebMaster: Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Category {
  id: String!
  name: String!
}

type ProductDirect {
  id: String!
  title: String!
  content: String!
  price: Int!
  createdAt: DateTime!
  quantity: Int!
  quantitySold: Int!
  isSoldout: Boolean!
  categoryId: String!
  directStoreId: String!
  users: [User!]!
  adminId: Admin!
}

type Seller {
  id: String!
  name: String!
  email: String!
  phone: String!
  grade: String!
  like: Float!
  type: String!
  createdAt: DateTime!
  users: [User!]!
}

type User {
  id: String!
  name: String!
  email: String!
  phone: String!
  type: String!
  createdAt: DateTime!
  sellers: [Seller!]!
  directProducts: [ProductDirect!]!
}

type ProductUgly {
  id: String!
  title: String!
  content: String!
  price: Int!
  createdAt: DateTime!
  quantity: Int!
  quantitySold: Int!
  origin: String!
  userId: String!
  seller: Seller!
}

type ImageUser {
  id: String!
  url: String!
  seller: String!
  user: String!
}

type Inquiry {
  id: String!
  title: String!
  question: String!
  answerTitle: String!
  answer: String!
  createdAt: DateTime!
  status: INQUIRY_STATUS_ENUM!
  user: User!
  isDeleted: Boolean!
  deletedAt: DateTime!
  productDirect: ProductDirect!
  productUgly: ProductUgly!
}

enum INQUIRY_STATUS_ENUM {
  NOT_ANSWERED
  ANSWERED
}

type Payment {
  id: String!
  impUid: String!
  amount: Int!
  paymentComplete: PAYMENT_STATUS_ENUM!
  user: User!
  productDirect: ProductDirect!
  productUgly: ProductUgly!
}

enum PAYMENT_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type Query {
  fetchAdminOfTheStore(directStoreId: String!): Admin!
  fetchSellers: [Seller!]!
  checkIfLoggedSeller(passwordFirst: String!, passwordSecond: String!): Boolean!
  fetchUserLoggedIn: String!
  fetchCategory(name: String!): Category!
  fetchCategories: [Category!]!
  fetchDirectStore(name: String!): DirectStore!
  fetchDirectStores: [DirectStore!]!
  fetchInquiry(title: String!): Inquiry!
  fetchInquiries: [Inquiry!]!
  fetchPayments: [Payment!]!
  fetchAllDirectProducts: [ProductDirect!]!
  fetchDirectProductsByDirectStoreId(directStoreId: String!): [ProductDirect!]!
  fetchDirectProductsByStoreAndCategory(directStoreId: String, categoryId: String, page: Float!): [ProductDirect!]!
  fetchUglyProducts: [ProductUgly!]!
  fetchUglyProduct(productId: String!): ProductUgly!
  fetchProductUglytitle(title: String!): [ProductUgly!]!
  fetchUser: String!
  fetchUsers: [User!]!
  checkIfLoggedUser(passwordFirst: String!, passwordSecond: String!): Boolean!
}

type Mutation {
  createAdmin(email: String!, password: String!, directStoreId: String, isWebMaster: Boolean): Admin!
  createSeller(name: String!, email: String!, password: String!, phone: String!): Seller!
  updateSeller(email: String, password: String, phone: String): Seller!
  loginUser(email: String!, password: String!): String!
  loginSeller(email: String!, password: String!): String!
  loginAdmin(email: String!, password: String!): String!
  logout: String!
  restoreAccessToken: String!
  createCategory(name: String!): Category!
  createDirectStore(name: String!): DirectStore!
  uploadImageDirect(files: [Upload!]!): [String!]!
  uploadImageUgly(files: [Upload!]!): [String!]!
  uploadImage(user_type: String!, user_id: String!, files: [Upload!]!): [ImageUser!]!
  uploadImageUser(files: [Upload!]!): [String!]!
  createInquiry(title: String!, question: String!, productDirectId: String, productUglyId: String): String!
  postResponse(inquiryId: String!, answerTitle: String!, answer: String!): String!
  editInquiry(inquiryId: String!, title: String!, question: String!): Inquiry!
  deleteInquiry(inquiryId: String!): String!
  createPayment(impUid: String!, amount: Float!, productDirectId: String, productUglyId: String): Payment!
  createProductDirect(title: String!, content: String!, price: Float!, quantity: Float!, categoryId: String!, directStoreId: String!, adminId: String!): ProductDirect!
  deleteProductDirect(productId: String!): Boolean!
  createProductUgly(title: String!, content: String!, price: Float!, quantity: Float!, origin: String!, sellerId: String!): ProductUgly!
  deleteProductUgly(productId: String!): Boolean!
  createUser(name: String!, email: String!, password: String!, phone: String!, addressUser: CreateAddressUserInput!): User!
  updateUser(email: String, password: String, phone: String, newAddress: UpdateAddressUserInput): User!
  likeYou(userId: String!, sellerId: String!): String!
  deleteUser(email: String!): Boolean!
  deleteLoginUser: User!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateAddressUserInput {
  address: String!
  detailedAddress: String!
  postalCode: String!
}

input UpdateAddressUserInput {
  address: String
  detailedAddress: String
  postalCode: String
}